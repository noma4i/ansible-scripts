upstream {{ app_name }} {
        {% if app_port is defined %}server 127.0.0.1:{{ app_port }};
        {% endif %}
        {% if app_ports is defined %}{% for port in app_ports %}server 127.0.0.1:{{ port }};
        {% endfor %}{% endif %}
}

server {
        listen {% if app_ip is defined %}{{ app_ip }}:{% endif %}80;

        {% block rails_app %}access_log {{ app_path }}/log/access.log;
        error_log {{ app_path }}/log/error.log; # debug;

        server_name {{ app_domain }} {% if app_alias is defined %}{{ app_alias }}{% endif %};

        # static files dir
        root {{ app_path }}/current/public;

        client_max_body_size 4G;
        keepalive_timeout 60s;

        {% block upstream %}location @upstream {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-Sendfile-Type X-Accel-Redirect;
                proxy_redirect off;
                proxy_read_timeout 300s;
                proxy_pass http://{{ app_name }};
                {% block upstream_extra %}{% endblock %}
        }
        {% endblock %}

        # If you don't find the filename in the static files
        # Then request it from the app
        {% block locations %}location / {
                error_page 500 502 503 504 /500.html;
                try_files $uri @upstream;
        }
        {% endblock %}

        {% block custom %}{% endblock %}

        {% endblock %}
}

{% if ssl_keyname is defined %}
server {
        listen {{ host_ip }}:443;
        {% if app_ip is defined %}listen {{ app_ip }}:443;{% endif %}

{% block ssl_init %}
        ssl on;
        ssl_ciphers RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_certificate /etc/nginx/ssl/{{ ssl_keyname }}.crt;
        ssl_certificate_key /etc/nginx/ssl/{{ ssl_keyname }}.key;
{% endblock %}

        {{ self.rails_app() }}
}
{% endif %}

{% if redirect_domains is defined %}
{% for domain in redirect_domains %}
server {
        listen 80;
        server_name {{ domain.from }};
        location / { rewrite ^ $scheme://{{ domain.to }}$request_uri permanent; }
}
{% if ssl_keyname is defined %}
server {
        listen {{ host_ip }}:443;
        {% if app_ip is defined %}listen {{ app_ip }}:443;{% endif %}
        {{ self.ssl_init() }}
        server_name {{ domain.from }};
        location / { rewrite ^ $scheme://{{ domain.to }}$request_uri permanent; }
}
{% endif %}
{% endfor %}
{% endif %}

